What happens when you initialize a repository? Why do you need to do it?
  - A git repository is created
  - To be able to store snapshots of the files

How is the staging area different from the working directory and the repository? What value do you think it offers?

- to separate commits logically

How can you use the staging area to make sure you have one commit per logical change?

- git status and git diff check changed files

What are some situations when branches would be helpful in keeping your history organized? How would branches help?

- for updates/ideas that are not for the main update

How do the diagrams help you visualize the branch structure?

- Tree structure visualizes the real structure and state

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

- it merges the branches into the master file combing the code into one branch

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?

+ automatic merging less work, less space for mistakes
- manually give more control over the code/merging process

Diagramming Tools:
- gliffy  https://www.gliffy.com/
- yUML http://yuml.me/diagram/activity/draw

Git Commit Styleguide:
https://udacity.github.io/git-styleguide/

Caching your GitHub password in Git:
https://help.github.com/articles/caching-your-github-password-in-git/
